version: "3"
services:
  broker:
    image: confluentinc/cp-kafka:${CFLT_TAG}
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "9101:9101"
      - "8090:8090"
      - "8091:8091"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS: true
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.image.loader.MetadataLoader=WARN"
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: "9apCDWinSSO_DuT_GJVsFw"
      # Enable Admin REST APIs
      KAFKA_CONFLUENT_HTTP_SERVER_LISTENERS: http://0.0.0.0:8090
      KAFKA_REST_BOOTSTRAP_SERVERS: "broker:29092"
      KAFKA_OPTS: "-javaagent:/tmp/jmx_prometheus_javaagent-0.20.0.jar=8091:/tmp/kafka_config.yml"
    volumes:
      - $PWD/volumes/jmx_prometheus_javaagent-0.20.0.jar:/tmp/jmx_prometheus_javaagent-0.20.0.jar
      - $PWD/volumes/kafka_config.yml:/tmp/kafka_config.yml

  schema-registry:
    image: confluentinc/cp-schema-registry:${CFLT_TAG}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"

  prometheus:
    image: prom/prometheus:${PROM_TAG}
    container_name: prometheus
    depends_on:
      - broker
    volumes:
      - $PWD/volumes/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  producer:
    build: java_examples/kafka-examples/producer
    hostname: producer
    container_name: producer
    command:
      [
        "java",
        "-javaagent:/tmp/jmx_prometheus_javaagent-0.20.0.jar=9191:/tmp/kafka_client.yml",
        "-cp",
        "app.jar",
        "com.github.prametta.producer.MyBeerProducer",
      ]
    ports:
      - "9191:9191"
    volumes:
      - $PWD/docker-compose.client.properties:/client.properties
      - $PWD/volumes/jmx_prometheus_javaagent-0.20.0.jar:/tmp/jmx_prometheus_javaagent-0.20.0.jar
      - $PWD/volumes/kafka_client.yml:/tmp/kafka_client.yml

  consumer:
    build: java_examples/kafka-examples/consumer
    hostname: consumer
    container_name: consumer
    command:
      [
        "java",
        "-javaagent:/tmp/jmx_prometheus_javaagent-0.20.0.jar=9191:/tmp/kafka_client.yml",
        "-cp",
        "app.jar",
        "com.github.prametta.consumer.MyBeerConsumer",
      ]
    ports:
      - "9192:9191"
    volumes:
      - $PWD/docker-compose.client.properties:/client.properties
      - $PWD/volumes/jmx_prometheus_javaagent-0.20.0.jar:/tmp/jmx_prometheus_javaagent-0.20.0.jar
      - $PWD/volumes/kafka_client.yml:/tmp/kafka_client.yml

  stream:
    build: java_examples/kafka-examples/streams
    hostname: stream
    container_name: stream
    command:
      [
        "java",
        "-javaagent:/tmp/jmx_prometheus_javaagent-0.20.0.jar=9191:/tmp/kafka_client.yml",
        "-cp",
        "app.jar",
        "com.github.prametta.streams.MyKafkaBeerStreamApp",
      ]
    ports:
      - "9193:9191"
    volumes:
      - $PWD/docker-compose.client.properties:/client.properties
      - $PWD/volumes/jmx_prometheus_javaagent-0.20.0.jar:/tmp/jmx_prometheus_javaagent-0.20.0.jar
      - $PWD/volumes/kafka_client.yml:/tmp/kafka_client.yml
